#include<bits/stdc++.h>
using namespace std;
const int maxn = 10000;
struct sta
{
    int s[maxn];
    int Top;
    char name;
    int top()
    {
        return s[Top];
    }
    int pop()
    {
        return s[Top--];
    }
    void push(int x)
    {
        s[++Top] = x;
    }
};
sta ha[3];
void build(int  n)
{
    ha[0].name = 'A';
    ha[0].Top = n-1;
    for(int i = 0 ; i < n ; i++)
        ha[0].s[i] = n - 1;
    ha[1].Top = ha[2].Top = 0;
    if(n % 2 == 0)
    {
        ha[1].name = 'B';
        ha[2].name = 'C';
    }
    else
    {
        ha[1].name = 'C';
        ha[2].name = 'B';
    }
}
void hannuota(int n)
{
    int k = 0 , i = 0 , temp;
    while(k < n)
    {
        temp = ha[i % 3].pop();
        ha[(i + 1) % 3].push(temp);
        i++;
        k++;
        if(k < n)
        {
            if(ha[(i + 1) % 3].top() == 0 || ha[(i - 1) % 3].top() > 0 && ha[(i + 1) % 3].top() > ha[(i - 1) % 3].top())
            {
                temp = ha[(i - 1) % 3].pop();
                ha[(i +1) % 3].push(temp);
                k++;
            }
            else
            {
                temp = ha[(i + 1) % 3].pop();
                ha[(i - 1) % 3].push(temp);
                k++;
            }
        }
    }
}
int main()
{
    int n;
    cin >> n;
    build(n);
    n = pow(2,n) - 1;
    hannuota(n);
    return 0;
}
