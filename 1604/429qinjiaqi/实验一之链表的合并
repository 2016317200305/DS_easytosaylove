#include <stdio.h>
#include <stdlib.h>
#include<malloc.h>
typedef struct Node
{
    int data;
    struct Node *next;
}Node,*linklist;
void createfromtail(linklist l,int n)
{
    Node *r,*s;
    r=l;
    int c,i;
    for(i=0;i<n;i++)
    {
        scanf("%d",&c);
        s=(Node *)malloc(sizeof(Node));
        s->data=c;
        r->next=s;
        r=s;
    }
    r->next=NULL;
}
void Delete(linklist l,int key)
{
    Node *p,*r;
    p=l;
    while(p->next!=NULL&&p->next->data!=key)
    {
        p=p->next;
    }
    if(p->next==NULL)
    {
        printf("删除位置不正确！");
    }
    else
    {
        r=p->next;
        p->next=p->next->next;
        free(r);
    }
}
void print(linklist l)
{
    Node *p;
    p=l->next;
    while(p!=NULL)
    {
        printf("%d",p->data);
        p=p->next;
    }
    printf("\n");
}
linklist mergelinklist(linklist a,linklist b,int n,int m)
{
    int i,j,t,d;
    Node *p,*q;
    p=a;
    for(i=0;i<n;i++)
    {
        p=p->next;
        t=p->data;
        q=b;
        for(j=0;j<m;j++)
        {
            q=q->next;
            d=q->data;
            if(t==d)
            {
                Delete(b,d);
            }
        }
    }
    p->next=b->next;
    return a;
}
int main()
{
    linklist a,b;
    int count1,count2;
    a=(linklist)malloc(sizeof(Node));
    a->next=NULL;
    b=(linklist)malloc(sizeof(Node));
    b->next=NULL;
    scanf("%d %d",&count1,&count2);
    createfromtail(a,count1);
    createfromtail(b,count2);
    print(a);
    print(b);
    mergelinklist(a,b,count1,count2);
    print(a);
    return 0;
}
